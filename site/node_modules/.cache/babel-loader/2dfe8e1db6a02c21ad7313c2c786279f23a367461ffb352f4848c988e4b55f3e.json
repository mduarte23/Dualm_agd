{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mduarte\\\\Desktop\\\\Projetos\\\\Dualm_agd\\\\site\\\\src\\\\contexts\\\\LoadingContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingContext = /*#__PURE__*/createContext(null);\nexport const LoadingProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const networkCountRef = useRef(0);\n  const manualCountRef = useRef(0);\n  const hideTimerRef = useRef(null);\n  const interceptorsRef = useRef({\n    request: null,\n    response: null\n  });\n  const updateVisibility = (withDelay = false) => {\n    const shouldShow = networkCountRef.current > 0 || manualCountRef.current > 0;\n    if (shouldShow) {\n      if (hideTimerRef.current) {\n        clearTimeout(hideTimerRef.current);\n        hideTimerRef.current = null;\n      }\n      setIsLoading(true);\n      return;\n    }\n    // no work pending: optionally delay hiding to prevent flicker\n    const hide = () => setIsLoading(false);\n    if (withDelay) {\n      if (hideTimerRef.current) clearTimeout(hideTimerRef.current);\n      hideTimerRef.current = setTimeout(() => {\n        hideTimerRef.current = null;\n        hide();\n      }, 120);\n    } else {\n      hide();\n    }\n  };\n  const incrementNetwork = () => {\n    networkCountRef.current += 1;\n    updateVisibility(false);\n  };\n  const decrementNetwork = () => {\n    networkCountRef.current = Math.max(0, networkCountRef.current - 1);\n    updateVisibility(true);\n  };\n\n  // Allow manual control (e.g., on navigation transitions)\n  const startLoading = () => {\n    manualCountRef.current += 1;\n    updateVisibility(false);\n  };\n  const stopLoading = () => {\n    manualCountRef.current = Math.max(0, manualCountRef.current - 1);\n    updateVisibility(true);\n  };\n  useEffect(() => {\n    // Register axios interceptors once\n    if (!interceptorsRef.current.request) {\n      interceptorsRef.current.request = axios.interceptors.request.use(config => {\n        incrementNetwork();\n        return config;\n      });\n    }\n    if (!interceptorsRef.current.response) {\n      interceptorsRef.current.response = axios.interceptors.response.use(response => {\n        decrementNetwork();\n        return response;\n      }, error => {\n        decrementNetwork();\n        return Promise.reject(error);\n      });\n    }\n    return () => {\n      // Eject on unmount to avoid leaks in tests/hot reloads\n      if (interceptorsRef.current.request !== null) {\n        axios.interceptors.request.eject(interceptorsRef.current.request);\n        interceptorsRef.current.request = null;\n      }\n      if (interceptorsRef.current.response !== null) {\n        axios.interceptors.response.eject(interceptorsRef.current.response);\n        interceptorsRef.current.response = null;\n      }\n      if (hideTimerRef.current) {\n        clearTimeout(hideTimerRef.current);\n        hideTimerRef.current = null;\n      }\n    };\n  }, []);\n  const value = useMemo(() => ({\n    isLoading,\n    startLoading,\n    stopLoading\n  }), [isLoading]);\n  return /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingProvider, \"6HDRmbpdDkt9jKZbFb/UOAyTtEo=\");\n_c = LoadingProvider;\nexport const useLoading = () => {\n  _s2();\n  const ctx = useContext(LoadingContext);\n  if (!ctx) throw new Error('useLoading must be used within LoadingProvider');\n  return ctx;\n};\n_s2(useLoading, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"LoadingProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useRef","useState","axios","jsxDEV","_jsxDEV","LoadingContext","LoadingProvider","children","_s","isLoading","setIsLoading","networkCountRef","manualCountRef","hideTimerRef","interceptorsRef","request","response","updateVisibility","withDelay","shouldShow","current","clearTimeout","hide","setTimeout","incrementNetwork","decrementNetwork","Math","max","startLoading","stopLoading","interceptors","use","config","error","Promise","reject","eject","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLoading","_s2","ctx","Error","$RefreshReg$"],"sources":["C:/Users/mduarte/Desktop/Projetos/Dualm_agd/site/src/contexts/LoadingContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoadingContext = createContext(null);\r\n\r\nexport const LoadingProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const networkCountRef = useRef(0);\r\n  const manualCountRef = useRef(0);\r\n  const hideTimerRef = useRef(null);\r\n  const interceptorsRef = useRef({ request: null, response: null });\r\n\r\n  const updateVisibility = (withDelay = false) => {\r\n    const shouldShow = networkCountRef.current > 0 || manualCountRef.current > 0;\r\n    if (shouldShow) {\r\n      if (hideTimerRef.current) {\r\n        clearTimeout(hideTimerRef.current);\r\n        hideTimerRef.current = null;\r\n      }\r\n      setIsLoading(true);\r\n      return;\r\n    }\r\n    // no work pending: optionally delay hiding to prevent flicker\r\n    const hide = () => setIsLoading(false);\r\n    if (withDelay) {\r\n      if (hideTimerRef.current) clearTimeout(hideTimerRef.current);\r\n      hideTimerRef.current = setTimeout(() => {\r\n        hideTimerRef.current = null;\r\n        hide();\r\n      }, 120);\r\n    } else {\r\n      hide();\r\n    }\r\n  };\r\n\r\n  const incrementNetwork = () => {\r\n    networkCountRef.current += 1;\r\n    updateVisibility(false);\r\n  };\r\n\r\n  const decrementNetwork = () => {\r\n    networkCountRef.current = Math.max(0, networkCountRef.current - 1);\r\n    updateVisibility(true);\r\n  };\r\n\r\n  // Allow manual control (e.g., on navigation transitions)\r\n  const startLoading = () => {\r\n    manualCountRef.current += 1;\r\n    updateVisibility(false);\r\n  };\r\n  const stopLoading = () => {\r\n    manualCountRef.current = Math.max(0, manualCountRef.current - 1);\r\n    updateVisibility(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Register axios interceptors once\r\n    if (!interceptorsRef.current.request) {\r\n      interceptorsRef.current.request = axios.interceptors.request.use((config) => {\r\n        incrementNetwork();\r\n        return config;\r\n      });\r\n    }\r\n\r\n    if (!interceptorsRef.current.response) {\r\n      interceptorsRef.current.response = axios.interceptors.response.use(\r\n        (response) => {\r\n          decrementNetwork();\r\n          return response;\r\n        },\r\n        (error) => {\r\n          decrementNetwork();\r\n          return Promise.reject(error);\r\n        }\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      // Eject on unmount to avoid leaks in tests/hot reloads\r\n      if (interceptorsRef.current.request !== null) {\r\n        axios.interceptors.request.eject(interceptorsRef.current.request);\r\n        interceptorsRef.current.request = null;\r\n      }\r\n      if (interceptorsRef.current.response !== null) {\r\n        axios.interceptors.response.eject(interceptorsRef.current.response);\r\n        interceptorsRef.current.response = null;\r\n      }\r\n      if (hideTimerRef.current) {\r\n        clearTimeout(hideTimerRef.current);\r\n        hideTimerRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const value = useMemo(() => ({\r\n    isLoading,\r\n    startLoading,\r\n    stopLoading\r\n  }), [isLoading]);\r\n\r\n  return (\r\n    <LoadingContext.Provider value={value}>\r\n      {children}\r\n    </LoadingContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLoading = () => {\r\n  const ctx = useContext(LoadingContext);\r\n  if (!ctx) throw new Error('useLoading must be used within LoadingProvider');\r\n  return ctx;\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}