{"ast":null,"code":"import axios from 'axios';\nimport authService from './authService';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\nconst usuariosService = {\n  async list() {\n    var _authService$getCurre;\n    const dominio = (_authService$getCurre = authService.getCurrentClient()) === null || _authService$getCurre === void 0 ? void 0 : _authService$getCurre.dominio;\n    const response = await axios.get(`${API_BASE_URL}/usuarios`, {\n      params: {\n        dominio\n      }\n    });\n    const data = response.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao listar usuários');\n    return data.usuarios || [];\n  },\n  async create({\n    nome,\n    email,\n    senha,\n    nivel\n  }) {\n    var _authService$getCurre2;\n    const dominio = (_authService$getCurre2 = authService.getCurrentClient()) === null || _authService$getCurre2 === void 0 ? void 0 : _authService$getCurre2.dominio;\n    const payload = {\n      dominio,\n      nome_usuario: nome,\n      email,\n      senha,\n      nivel\n    };\n    const response = await axios.post(`${API_BASE_URL}/usuarios`, payload);\n    const data = response.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao criar usuário');\n    return data.usuario;\n  },\n  async update(id, {\n    nome,\n    email,\n    senha,\n    nivel\n  }) {\n    var _authService$getCurre3;\n    const dominio = (_authService$getCurre3 = authService.getCurrentClient()) === null || _authService$getCurre3 === void 0 ? void 0 : _authService$getCurre3.dominio;\n    const payload = {\n      dominio,\n      nome_usuario: nome,\n      email,\n      senha,\n      nivel\n    };\n    const response = await axios.put(`${API_BASE_URL}/usuarios/${id}`, payload);\n    const data = response.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao atualizar usuário');\n    return data.usuario;\n  },\n  async remove(id) {\n    var _authService$getCurre4;\n    const dominio = (_authService$getCurre4 = authService.getCurrentClient()) === null || _authService$getCurre4 === void 0 ? void 0 : _authService$getCurre4.dominio;\n    const response = await axios.delete(`${API_BASE_URL}/usuarios/${id}`, {\n      params: {\n        dominio\n      }\n    });\n    const data = response.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao remover usuário');\n    return true;\n  }\n};\nexport default usuariosService;","map":{"version":3,"names":["axios","authService","API_BASE_URL","process","env","REACT_APP_API_URL","usuariosService","list","_authService$getCurre","dominio","getCurrentClient","response","get","params","data","success","Error","message","usuarios","create","nome","email","senha","nivel","_authService$getCurre2","payload","nome_usuario","post","usuario","update","id","_authService$getCurre3","put","remove","_authService$getCurre4","delete"],"sources":["C:/Users/mduarte/Desktop/Projetos/Dualm_agd/site/src/services/usuariosService.js"],"sourcesContent":["import axios from 'axios';\r\nimport authService from './authService';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\r\n\r\nconst usuariosService = {\r\n  async list() {\r\n    const dominio = authService.getCurrentClient()?.dominio;\r\n    const response = await axios.get(`${API_BASE_URL}/usuarios`, { params: { dominio } });\r\n    const data = response.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao listar usuários');\r\n    return data.usuarios || [];\r\n  },\r\n  async create({ nome, email, senha, nivel }) {\r\n    const dominio = authService.getCurrentClient()?.dominio;\r\n    const payload = { dominio, nome_usuario: nome, email, senha, nivel };\r\n    const response = await axios.post(`${API_BASE_URL}/usuarios`, payload);\r\n    const data = response.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao criar usuário');\r\n    return data.usuario;\r\n  },\r\n  async update(id, { nome, email, senha, nivel }) {\r\n    const dominio = authService.getCurrentClient()?.dominio;\r\n    const payload = { dominio, nome_usuario: nome, email, senha, nivel };\r\n    const response = await axios.put(`${API_BASE_URL}/usuarios/${id}`, payload);\r\n    const data = response.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao atualizar usuário');\r\n    return data.usuario;\r\n  },\r\n  async remove(id) {\r\n    const dominio = authService.getCurrentClient()?.dominio;\r\n    const response = await axios.delete(`${API_BASE_URL}/usuarios/${id}`, { params: { dominio } });\r\n    const data = response.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao remover usuário');\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default usuariosService;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}