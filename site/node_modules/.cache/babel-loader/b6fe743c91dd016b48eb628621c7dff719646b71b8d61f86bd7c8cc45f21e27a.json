{"ast":null,"code":"import axios from 'axios';\n\n// Configuração base da API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nclass AuthService {\n  // Login: resolve domínio e autentica no banco do tenant em um único endpoint\n  async login(domain, email, password) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/v1/auth/login`, {\n        dominio: domain,\n        email,\n        senha: password\n      });\n      const data = response.data || {};\n\n      // Persistência local mínima\n      localStorage.setItem('userInfo', JSON.stringify({\n        id: data.id,\n        email: data.email,\n        nome: data.nome\n      }));\n      localStorage.setItem('clientInfo', JSON.stringify({\n        dominio: domain,\n        db_url: data.db_url\n      }));\n      return {\n        success: true,\n        user: {\n          id: data.id,\n          email: data.email,\n          name: data.nome\n        },\n        clientInfo: {\n          domain,\n          db_url: data.db_url\n        }\n      };\n    } catch (error) {\n      var _error$response, _error$response2;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        throw new Error('E-mail ou senha incorretos');\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 404) {\n        throw new Error('Domínio não encontrado');\n      }\n      throw new Error('Erro ao fazer login. Tente novamente.');\n    }\n  }\n\n  // Verificar se o usuário está logado\n  isAuthenticated() {\n    const userInfo = localStorage.getItem('userInfo');\n    return !!userInfo;\n  }\n\n  // Obter informações do usuário logado\n  getCurrentUser() {\n    const userInfo = localStorage.getItem('userInfo');\n    return userInfo ? JSON.parse(userInfo) : null;\n  }\n\n  // Obter informações do cliente\n  getCurrentClient() {\n    const clientInfo = localStorage.getItem('clientInfo');\n    return clientInfo ? JSON.parse(clientInfo) : null;\n  }\n\n  // Logout\n  logout() {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('clientInfo');\n  }\n\n  // Token não utilizado neste fluxo por enquanto\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","AuthService","login","domain","email","password","response","post","dominio","senha","data","localStorage","setItem","JSON","stringify","id","nome","db_url","success","user","name","clientInfo","error","_error$response","_error$response2","status","Error","isAuthenticated","userInfo","getItem","getCurrentUser","parse","getCurrentClient","logout","removeItem"],"sources":["C:/Users/mduarte/Desktop/Projetos/Dualm_agd/site/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configuração base da API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nclass AuthService {\r\n  // Login: resolve domínio e autentica no banco do tenant em um único endpoint\r\n  async login(domain, email, password) {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/api/v1/auth/login`, {\r\n        dominio: domain,\r\n        email,\r\n        senha: password\r\n      });\r\n\r\n      const data = response.data || {};\r\n\r\n      // Persistência local mínima\r\n      localStorage.setItem('userInfo', JSON.stringify({\r\n        id: data.id,\r\n        email: data.email,\r\n        nome: data.nome\r\n      }));\r\n      localStorage.setItem('clientInfo', JSON.stringify({\r\n        dominio: domain,\r\n        db_url: data.db_url\r\n      }));\r\n\r\n      return {\r\n        success: true,\r\n        user: { id: data.id, email: data.email, name: data.nome },\r\n        clientInfo: { domain, db_url: data.db_url }\r\n      };\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        throw new Error('E-mail ou senha incorretos');\r\n      } else if (error.response?.status === 404) {\r\n        throw new Error('Domínio não encontrado');\r\n      }\r\n      throw new Error('Erro ao fazer login. Tente novamente.');\r\n    }\r\n  }\r\n\r\n  // Verificar se o usuário está logado\r\n  isAuthenticated() {\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    return !!userInfo;\r\n  }\r\n\r\n  // Obter informações do usuário logado\r\n  getCurrentUser() {\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    return userInfo ? JSON.parse(userInfo) : null;\r\n  }\r\n\r\n  // Obter informações do cliente\r\n  getCurrentClient() {\r\n    const clientInfo = localStorage.getItem('clientInfo');\r\n    return clientInfo ? JSON.parse(clientInfo) : null;\r\n  }\r\n\r\n  // Logout\r\n  logout() {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('clientInfo');\r\n  }\r\n\r\n  // Token não utilizado neste fluxo por enquanto\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,WAAW,CAAC;EAChB;EACA,MAAMC,KAAKA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,GAAGV,YAAY,oBAAoB,EAAE;QACrEW,OAAO,EAAEL,MAAM;QACfC,KAAK;QACLK,KAAK,EAAEJ;MACT,CAAC,CAAC;MAEF,MAAMK,IAAI,GAAGJ,QAAQ,CAACI,IAAI,IAAI,CAAC,CAAC;;MAEhC;MACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC;QAC9CC,EAAE,EAAEL,IAAI,CAACK,EAAE;QACXX,KAAK,EAAEM,IAAI,CAACN,KAAK;QACjBY,IAAI,EAAEN,IAAI,CAACM;MACb,CAAC,CAAC,CAAC;MACHL,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC;QAChDN,OAAO,EAAEL,MAAM;QACfc,MAAM,EAAEP,IAAI,CAACO;MACf,CAAC,CAAC,CAAC;MAEH,OAAO;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;UAAEJ,EAAE,EAAEL,IAAI,CAACK,EAAE;UAAEX,KAAK,EAAEM,IAAI,CAACN,KAAK;UAAEgB,IAAI,EAAEV,IAAI,CAACM;QAAK,CAAC;QACzDK,UAAU,EAAE;UAAElB,MAAM;UAAEc,MAAM,EAAEP,IAAI,CAACO;QAAO;MAC5C,CAAC;IACH,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACd,IAAI,EAAAD,eAAA,GAAAD,KAAK,CAAChB,QAAQ,cAAAiB,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;QAClC,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C,CAAC,MAAM,IAAI,EAAAF,gBAAA,GAAAF,KAAK,CAAChB,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QACzC,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAM,IAAIA,KAAK,CAAC,uCAAuC,CAAC;IAC1D;EACF;;EAEA;EACAC,eAAeA,CAAA,EAAG;IAChB,MAAMC,QAAQ,GAAGjB,YAAY,CAACkB,OAAO,CAAC,UAAU,CAAC;IACjD,OAAO,CAAC,CAACD,QAAQ;EACnB;;EAEA;EACAE,cAAcA,CAAA,EAAG;IACf,MAAMF,QAAQ,GAAGjB,YAAY,CAACkB,OAAO,CAAC,UAAU,CAAC;IACjD,OAAOD,QAAQ,GAAGf,IAAI,CAACkB,KAAK,CAACH,QAAQ,CAAC,GAAG,IAAI;EAC/C;;EAEA;EACAI,gBAAgBA,CAAA,EAAG;IACjB,MAAMX,UAAU,GAAGV,YAAY,CAACkB,OAAO,CAAC,YAAY,CAAC;IACrD,OAAOR,UAAU,GAAGR,IAAI,CAACkB,KAAK,CAACV,UAAU,CAAC,GAAG,IAAI;EACnD;;EAEA;EACAY,MAAMA,CAAA,EAAG;IACPtB,YAAY,CAACuB,UAAU,CAAC,UAAU,CAAC;IACnCvB,YAAY,CAACuB,UAAU,CAAC,YAAY,CAAC;EACvC;;EAEA;AACF;AAEA,eAAe,IAAIjC,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}