{"ast":null,"code":"import axios from 'axios';\nimport authService from './authService';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\nconst niveisService = {\n  async list() {\n    var _authService$getCurre;\n    let dominio = (_authService$getCurre = authService.getCurrentClient()) === null || _authService$getCurre === void 0 ? void 0 : _authService$getCurre.dominio;\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\n    const res = await axios.get(`${API_BASE_URL}/niveis`, {\n      params: {\n        dominio\n      }\n    });\n    const data = res.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao listar níveis');\n    return data.niveis || [];\n  },\n  async create({\n    nivel\n  }) {\n    var _authService$getCurre2;\n    let dominio = (_authService$getCurre2 = authService.getCurrentClient()) === null || _authService$getCurre2 === void 0 ? void 0 : _authService$getCurre2.dominio;\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\n    const res = await axios.post(`${API_BASE_URL}/niveis`, {\n      dominio,\n      nivel\n    });\n    const data = res.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao criar nível');\n    return data.nivel;\n  },\n  async update(id, {\n    nivel\n  }) {\n    var _authService$getCurre3;\n    let dominio = (_authService$getCurre3 = authService.getCurrentClient()) === null || _authService$getCurre3 === void 0 ? void 0 : _authService$getCurre3.dominio;\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\n    const res = await axios.put(`${API_BASE_URL}/niveis/${id}`, {\n      dominio,\n      nivel\n    });\n    const data = res.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao atualizar nível');\n    return data.nivel;\n  },\n  async remove(id) {\n    var _authService$getCurre4;\n    let dominio = (_authService$getCurre4 = authService.getCurrentClient()) === null || _authService$getCurre4 === void 0 ? void 0 : _authService$getCurre4.dominio;\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\n    const res = await axios.delete(`${API_BASE_URL}/niveis/${id}`, {\n      params: {\n        dominio\n      }\n    });\n    const data = res.data || {};\n    if (!data.success) throw new Error(data.message || 'Falha ao remover nível');\n    return true;\n  }\n};\nexport default niveisService;","map":{"version":3,"names":["axios","authService","API_BASE_URL","process","env","REACT_APP_API_URL","niveisService","list","_authService$getCurre","dominio","getCurrentClient","includes","res","get","params","data","success","Error","message","niveis","create","nivel","_authService$getCurre2","post","update","id","_authService$getCurre3","put","remove","_authService$getCurre4","delete"],"sources":["C:/Users/mduarte/Desktop/Projetos/Dualm_agd/site/src/services/niveisService.js"],"sourcesContent":["import axios from 'axios';\r\nimport authService from './authService';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\r\n\r\nconst niveisService = {\r\n  async list() {\r\n    let dominio = authService.getCurrentClient()?.dominio;\r\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\r\n    const res = await axios.get(`${API_BASE_URL}/niveis`, { params: { dominio } });\r\n    const data = res.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao listar níveis');\r\n    return data.niveis || [];\r\n  },\r\n  async create({ nivel }) {\r\n    let dominio = authService.getCurrentClient()?.dominio;\r\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\r\n    const res = await axios.post(`${API_BASE_URL}/niveis`, { dominio, nivel });\r\n    const data = res.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao criar nível');\r\n    return data.nivel;\r\n  },\r\n  async update(id, { nivel }) {\r\n    let dominio = authService.getCurrentClient()?.dominio;\r\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\r\n    const res = await axios.put(`${API_BASE_URL}/niveis/${id}`, { dominio, nivel });\r\n    const data = res.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao atualizar nível');\r\n    return data.nivel;\r\n  },\r\n  async remove(id) {\r\n    let dominio = authService.getCurrentClient()?.dominio;\r\n    if (dominio && !dominio.includes('.')) dominio = `${dominio}.com`;\r\n    const res = await axios.delete(`${API_BASE_URL}/niveis/${id}`, { params: { dominio } });\r\n    const data = res.data || {};\r\n    if (!data.success) throw new Error(data.message || 'Falha ao remover nível');\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default niveisService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}